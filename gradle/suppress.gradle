import groovy.util.slurpersupport.GPathResult
import groovy.xml.XmlUtil

def suppressCves(reportName) {
    reportName  = reportName == null || reportName as String == "" ? "dependency-check-report.xml" : reportName as String

    def reportFile = new File(project.file(dependencyCheck.getOutputDirectory()), reportName)
    if (!reportFile.isFile()) {
        throw new FileNotFoundException("Report file not found.\n" +
                "\nPossible Solution: run :dependencyCheckAnalyze")
    }

    GPathResult report = new XmlSlurper().parse(new FileReader(reportFile))
    Set<String> unSuppressedCves = report.'**'
                                    .findAll { node -> node.name() == 'vulnerability' }
                                    .collect { it.name.text() } as Set<String>

    if (!unSuppressedCves.isEmpty()) {
        File suppressionsFile = project.file(dependencyCheck.getSuppressionFile())
        GPathResult response = new XmlSlurper(false, false).parse(suppressionsFile)
        unSuppressedCves.each {
            String cveName = it
            (response << {
                suppress {
                    notes('Ticket TBC')
                    cve(cveName)
                }
            })
        }
        suppressionsFile.write(XmlUtil.serialize(response))
    }
}

task suppressCves() {
    doLast {suppressCves("")}
}
